
import telebot
from telebot import types  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–æ–∫
import io  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–π—Ç–æ–≤—ã–º–∏ –ø–æ—Ç–æ–∫–∞–º–∏ –≤ –ø–∞–º—è—Ç–∏ (BytesIO)
from PyPDF2 import PdfReader  # –î–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF —Ñ–∞–π–ª–æ–≤
from sentence_transformers import SentenceTransformer  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ —Ç–µ–∫—Å—Ç–∞

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
embedding_model = SentenceTransformer('all-MiniLM-L6-v2')

token = "token-bot"  # –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞
bot = telebot.TeleBot(token=token)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ (–∏–∑ —Ñ–∞–π–ª–æ–≤) –∏ –∑–∞–ø—Ä–æ—Å–æ–≤
all_texts = []
saved_requests = []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ .txt —Ñ–∞–π–ª–∞ (–±–∞–π—Ç—ã -> —Å—Ç—Ä–æ–∫–∞)
def extract_text_from_txt(file_bytes: bytes) -> str:
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –±–∞–π—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É UTF-8 (–µ—Å–ª–∏ –∫–∏—Ä–∏–ª–ª–∏—Ü–∞, –º–æ–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å –Ω–∞ 'cp1251')
    return file_bytes.decode('utf-8')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF —Ñ–∞–π–ª–∞ (–±–∞–π—Ç—ã -> —Å—Ç—Ä–æ–∫–∞)
def extract_text_from_pdf(file_bytes: bytes) -> str:
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º PDF –∏–∑ –±–∞–π—Ç–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫
    reader = PdfReader(io.BytesIO(file_bytes))
    text = ''
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º PDF –∏ —Å–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç
    for page in reader.pages:
        text += page.extract_text() or ''  # –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
    return text

def save_request(message):
    global save_request
    saved_requests.append(message.text)
    print(saved_requests)
    bot.send_message(message.chat.id, f"‚úÖ –ó–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω:\n\n{message.text}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞ —Ç–µ–∫—Å—Ç–∞
def embed_text(text: str):
    # –ú–æ–¥–µ–ª—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    return embedding_model.encode([text])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–∏–≤–∫–∏ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —á–∞–Ω–∫–∏ (—á–∞—Å—Ç–∏) –ø–æ max_words —Å–ª–æ–≤
def split_into_chunks(text: str, max_words: int = 500):
    words = text.split()  # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫-—á–∞–Ω–∫–æ–≤ –ø–æ max_words —Å–ª–æ–≤ –≤ –∫–∞–∂–¥–æ–º
    chunks = [' '.join(words[i:i + max_words]) for i in range(0, len(words), max_words)]
    return chunks


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∞
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    btn1 = types.KeyboardButton("üëã –ò —Ç–µ–±–µ –Ω–µ —Ö–≤–æ—Ä–∞—Ç—å")  # –ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
    markup.add(btn1)
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç!", reply_markup=markup)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π


# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º –∏ —Ñ–∞–π–ª–∞–º–∏
@bot.message_handler(content_types=['text', 'document'])
def handle_files(message):
    global all_texts  # –û–±—ä—è–≤–ª—è–µ–º, —á—Ç–æ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤

    if message.document:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –±–∞–π—Ç–∞—Ö
        file_info = bot.get_file(message.document.file_id)
        file_name = message.document.file_name
        file_bytes = bot.download_file(file_info.file_path)

        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –≤—ã–±–∏—Ä–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            if file_name.split('.')[-1].lower() == 'txt':
                text = extract_text_from_txt(file_bytes)
            elif file_name.split('.')[-1].lower() == 'pdf':
                text = extract_text_from_pdf(file_bytes)
            else:
                bot.reply_to(message, '‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã .txt –∏ .pdf')
                return

            all_texts.append(text)  # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
            print(len(all_texts))  # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
            bot.reply_to(message, f"üìÑ –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: {message.document.file_name}")

        except Exception as er:
            # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {er}")

    elif message.text:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if message.text == 'üëã –ò —Ç–µ–±–µ –Ω–µ —Ö–≤–æ—Ä–∞—Ç—å':
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª")
            btn2 = types.KeyboardButton('–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã')
            btn3 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—Ä–æ—Å—ã')
            btn4 = types.KeyboardButton("üìù –ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å")
            markup.add(btn1)
            markup.add(btn2)
            markup.add(btn3)
            markup.add(btn4)
            bot.send_message(message.chat.id, '–ù–∞—á–Ω–µ–º?)', reply_markup=markup)

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª':
            bot.send_message(message.chat.id, '–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Ñ–∞–π–ª')

        elif message.text == '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã':
            # –†–∞–∑–±–∏–≤–∞–µ–º –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –Ω–∞ —á–∞–Ω–∫–∏
            all_chunks = []
            for doc in all_texts:
                chunks = split_into_chunks(doc, max_words=500)
                all_chunks.extend(chunks)

            print(f'Created {len(all_chunks)} chunks')  # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–Ω–∫–æ–≤
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–∑–æ–≤ embed_text(all_chunks) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
           

        elif message.text == '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—Ä–æ—Å—ã':
            all_texts = []  # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
            saved_requests = [] # –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
            print(saved_requests)
            bot.send_message(message.chat.id, '–§–∞–π–ª—ã –∏ –∑–∞–ø—Ä–æ—Å—ã —É–¥–∞–ª–µ–Ω—ã')
            

        elif message.text == 'üìù –ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å':
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å:")
            bot.register_next_step_handler(message, save_request)
            
            
            
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ‚Äî –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.polling(none_stop=True, interval=0)
